# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: build-test-push

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Download repository
      uses: actions/checkout@v3.0.2
      
    - name: Set up JDK 18
      uses: actions/setup-java@v3.2.0
      with:
        java-version: 18
 
    - name: Cache Maven packages
      uses: actions/cache@v3.2.0
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
      
    - name: Test with Maven
      run: mvn -B test --file pom.xml

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        mvn clean package install

    # - uses: dev-drprasad/delete-tag-and-release@v0.2.0
    #   with:
    #     delete_release: true # default: false
    #     tag_name: latest
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Delete latest release
      uses: ame-yu/action-delete-latest-release@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: latest
        release_name: Latest
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./target/ldap-server.jar
        asset_name: ldap-server.jar
        asset_content_type: application/java-archive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v3.2.0
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2.10.0
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/apacheds-ad:latest
        cache-from: ${{ secrets.DOCKERHUB_USERNAME }}/apacheds-ad-cache
        cache-to: ${{ secrets.DOCKERHUB_USERNAME }}/apacheds-ad-cache